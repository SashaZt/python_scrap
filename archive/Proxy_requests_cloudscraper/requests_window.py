# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'requests.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox



class Ui_MainWindow(object):
    def __init__(self, main_window):
        self.main_window = main_window
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(405, 274)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.put_url = QtWidgets.QLineEdit(self.centralwidget)
        self.put_url.setGeometry(QtCore.QRect(10, 50, 200, 50))
        self.put_url.setObjectName("put_url")
        self.btn_enter = QtWidgets.QPushButton(self.centralwidget)
        self.btn_enter.setGeometry(QtCore.QRect(220, 50, 150, 50))
        self.btn_enter.setObjectName("btn_enter")
        self.btn_cookies = QtWidgets.QPushButton(self.centralwidget)
        self.btn_cookies.setGeometry(QtCore.QRect(220, 120, 150, 50))
        self.btn_cookies.setObjectName("btn_cookies")
        self.put_cookies = QtWidgets.QLineEdit(self.centralwidget)
        self.put_cookies.setGeometry(QtCore.QRect(10, 120, 200, 50))
        self.put_cookies.setObjectName("put_cookies")
        self.btn_get_request = QtWidgets.QPushButton(self.centralwidget)
        self.btn_get_request.setGeometry(QtCore.QRect(220, 190, 150, 50))
        self.btn_get_request.setObjectName("btn_get_request")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # Подключаем функции к кнопкам
        self.btn_enter.clicked.connect(self.click_url)
        self.btn_cookies.clicked.connect(self.click_cookies)
        self.btn_get_request.clicked.connect(self.start_request)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Тестирование requests"))
        self.btn_enter.setText(_translate("MainWindow", "Вводим url"))
        self.btn_cookies.setText(_translate("MainWindow", "Вводим куки"))
        self.btn_get_request.setText(_translate("MainWindow", "Запуск запроса"))

    def click_url(self):
        url = self.put_url.text()
        return  url
        # Дальше вы можете передать этот URL куда вам нужно
    def click_cookies(self):
        curl = self.put_cookies.text()
        return curl

    def get_cookie_header(self, curl):
        import re
        cookies = {}  # Инициализируем переменную cookies пустым словарем
        cookies_match = re.search(r"Cookie:\s(.*?)'", curl)
        if cookies_match:
            cookies_str = cookies_match.group(1)
            cookies_list = cookies_str.split('; ')
            cookies = {cookie.split('=')[0]: cookie.split('=')[1] for cookie in cookies_list}

        # Extracting headers
        headers_match = re.findall(r"-H '(.*?)'", curl)
        headers = {header.split(': ')[0]: header.split(': ')[1] for header in headers_match}
        return cookies, headers

        # Дальше вы можете передать этот URL куда вам нужно

    def get_requests(self, url, cookies, headers):
        import requests
        from bs4 import BeautifulSoup

        response = requests.get(url, cookies=cookies, headers=headers)
        src = response.text
        soup = BeautifulSoup(src, 'lxml')
        filename = "amazon.html"

        try:
            with open(filename, "w", encoding='windows-1251') as file:
                file.write(src)
            self.show_message("Успешно", "Файл amazon.html успешно сохранен!")
        except Exception as e:
            self.show_message("Ошибка", str(e))

    def start_request(self):
        url = self.click_url()
        curl = self.click_cookies()
        cookies, headers = self.get_cookie_header(curl)
        self.get_requests(url, cookies, headers)

    def show_message(self, title, message):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle(title)
        msg.setText(message)
        result = msg.exec_()
        if result == QMessageBox.Ok:
            self.main_window.close()




if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow(MainWindow)
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
